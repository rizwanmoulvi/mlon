{
  "address": "0x1FF077B9f023CA6FDE5d299B7ab758E6f93B5D68",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "category",
          "type": "uint256"
        }
      ],
      "name": "NewAnalytics",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "schemaName",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "columns",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "data",
          "type": "uint256[]"
        }
      ],
      "name": "addAnalytics",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "schemaName",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "columns",
          "type": "bytes32[]"
        },
        {
          "internalType": "enum DataLayer.Category",
          "name": "category",
          "type": "uint8"
        }
      ],
      "name": "addSchema",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "consumerCredits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dappAnalytics",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "schemaName",
          "type": "bytes32"
        },
        {
          "internalType": "enum DataLayer.Category",
          "name": "schemaCategory",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSchemas",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "schemaName",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "columns",
              "type": "bytes32[]"
            },
            {
              "internalType": "enum DataLayer.Category",
              "name": "schemaCategory",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalRecords",
              "type": "uint256"
            }
          ],
          "internalType": "struct DataLayer.SchemaDetails[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "schemaName",
          "type": "bytes32"
        }
      ],
      "name": "getAnalyticsDataBySchemaName",
      "outputs": [
        {
          "internalType": "uint256[][]",
          "name": "",
          "type": "uint256[][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "schemaName",
          "type": "bytes32"
        }
      ],
      "name": "getColumnsOfSchema",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "schemaName",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getSchemaAddressToId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "schemaName",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "userId",
          "type": "uint256"
        }
      ],
      "name": "getSchemaIdToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserActivityMatrix",
      "outputs": [
        {
          "internalType": "uint256[][]",
          "name": "",
          "type": "uint256[][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "schemaIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCategories",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "schemaName",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "columns",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "data",
          "type": "uint256[]"
        }
      ],
      "name": "updateAnalytics",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userActivityMatrix",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x3cd8f03e03128729bba089d1ddacccf921a4fe26745a2eda9e7e4b506ed1330e",
  "receipt": {
    "to": null,
    "from": "0x104FE0b8b7B054D5a02cFEe7cE0eC4f4c71a88DC",
    "contractAddress": "0x1FF077B9f023CA6FDE5d299B7ab758E6f93B5D68",
    "transactionIndex": 1,
    "gasUsed": "1427604",
    "logsBloom": "0x
    "blockHash": "0x8cf6bcb6816bdedf3896b763c8a753de145fae482871361e26b05f7acd32e417",
    "transactionHash": "0x3cd8f03e03128729bba089d1ddacccf921a4fe26745a2eda9e7e4b506ed1330e",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 37191751,
        "transactionHash": "0x3cd8f03e03128729bba089d1ddacccf921a4fe26745a2eda9e7e4b506ed1330e",
        "address": "0x1FF077B9f023CA6FDE5d299B7ab758E6f93B5D68",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000104fe0b8b7b054d5a02cfee7ce0ec4f4c71a88dc"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x8cf6bcb6816bdedf3896b763c8a753de145fae482871361e26b05f7acd32e417"
      }
    ],
    "blockNumber": 37191751,
    "cumulativeGasUsed": "1477043",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "19609204036b5cf7008b569ad08610fa",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"}],\"name\":\"NewAnalytics\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"schemaName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"columns\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"data\",\"type\":\"uint256[]\"}],\"name\":\"addAnalytics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"schemaName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"columns\",\"type\":\"bytes32[]\"},{\"internalType\":\"enum DataLayer.Category\",\"name\":\"category\",\"type\":\"uint8\"}],\"name\":\"addSchema\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"addUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"consumerCredits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dappAnalytics\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"schemaName\",\"type\":\"bytes32\"},{\"internalType\":\"enum DataLayer.Category\",\"name\":\"schemaCategory\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSchemas\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schemaName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"columns\",\"type\":\"bytes32[]\"},{\"internalType\":\"enum DataLayer.Category\",\"name\":\"schemaCategory\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalRecords\",\"type\":\"uint256\"}],\"internalType\":\"struct DataLayer.SchemaDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"schemaName\",\"type\":\"bytes32\"}],\"name\":\"getAnalyticsDataBySchemaName\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"schemaName\",\"type\":\"bytes32\"}],\"name\":\"getColumnsOfSchema\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"schemaName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getSchemaAddressToId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"schemaName\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"}],\"name\":\"getSchemaIdToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserActivityMatrix\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"schemaIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCategories\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"schemaName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"columns\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"data\",\"type\":\"uint256[]\"}],\"name\":\"updateAnalytics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userActivityMatrix\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DataLayer.sol\":\"DataLayer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/DataLayer.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract DataLayer is Ownable {\\n\\n    uint256[][] public userActivityMatrix;\\n    mapping(address => uint256) public addressToId;\\n    mapping(uint256 => address) public idToAddress;\\n    mapping(address => uint256) public consumerCredits;\\n    mapping(bytes32 => uint256) public schemaIndex;\\n    uint256 public latestIndex;\\n    uint256 public totalCategories;\\n\\n    enum Category {\\n        Gaming,\\n        Marketplace,\\n        Defi,\\n        Dao,\\n        Web3Social,\\n        Identity,\\n        Certificates\\n    }\\n\\n    struct SchemaDetails {\\n        bytes32 schemaName;\\n        bytes32[] columns;\\n        Category schemaCategory;\\n        uint256 totalRecords;\\n    }\\n\\n    struct Analytics {\\n        bytes32 schemaName;\\n        bytes32[] columns;\\n        Category schemaCategory;\\n        uint256[][] data;\\n        mapping(address => uint256) addressToId;\\n        mapping(uint256 => address) idToAddress;\\n        mapping(bytes32 => uint256) columnToIndex;\\n    }\\n\\n    Analytics[] public dappAnalytics;\\n\\n    constructor() Ownable() {\\n        uint256[] memory initialMatrix;\\n        userActivityMatrix.push(initialMatrix);\\n        latestIndex = 0;\\n        totalCategories = 7;\\n        dappAnalytics.push();\\n    }\\n\\n    event NewAnalytics(address user, address provider, uint256 category);\\n\\n    function addUser(address userAddress) external {\\n        latestIndex = latestIndex + 1;\\n        uint256[] memory initialMatrix;\\n        userActivityMatrix.push(initialMatrix);\\n\\n        for (uint256 i = 0; i < totalCategories; i++) {\\n            userActivityMatrix[latestIndex].push(0);\\n        }\\n\\n        addressToId[userAddress] = latestIndex;\\n        idToAddress[latestIndex] = userAddress;\\n    }\\n\\n    function addSchema(\\n        bytes32 schemaName,\\n        bytes32[] calldata columns,\\n        Category category\\n    ) external {\\n        require(schemaIndex[schemaName] == uint256(0), \\\"SCHEMA NAME EXISTS\\\");\\n\\n        Analytics storage analytics = dappAnalytics.push();\\n        analytics.schemaName = schemaName;\\n        analytics.schemaCategory = category;\\n\\n        uint256[] memory initialUser;\\n        analytics.data.push(initialUser);\\n\\n        for (uint256 i = 0; i < columns.length; i++) {\\n            analytics.data[0].push(0);\\n            analytics.columns.push(columns[i]);\\n            analytics.columnToIndex[columns[i]] = i;\\n        }\\n\\n        schemaIndex[schemaName] = dappAnalytics.length - 1;\\n    }\\n\\n    function addAnalytics(\\n        address userAddress,\\n        bytes32 schemaName,\\n        bytes32[] calldata columns,\\n        uint256[] calldata data\\n    ) public {\\n        require(schemaIndex[schemaName] != 0, \\\"SCHEMA NOT PRESENT\\\");\\n\\n        if (addressToId[userAddress] == 0) {\\n            this.addUser(userAddress);\\n        }\\n\\n        Analytics storage schemaAnalytics = dappAnalytics[\\n            schemaIndex[schemaName]\\n        ];\\n\\n        if (schemaAnalytics.addressToId[userAddress] == 0) {\\n            schemaAnalytics.data.push();\\n            for (uint256 i = 0; i < schemaAnalytics.columns.length; i++) {\\n                schemaAnalytics.data[schemaAnalytics.data.length - 1].push(0);\\n            }\\n\\n            schemaAnalytics.addressToId[userAddress] =\\n                schemaAnalytics.data.length - 1;\\n            schemaAnalytics.idToAddress[\\n                schemaAnalytics.data.length - 1\\n            ] = userAddress;\\n        }\\n\\n        for (uint256 i = 0; i < columns.length; i++) {\\n            schemaAnalytics.data[schemaAnalytics.addressToId[userAddress]][\\n                schemaAnalytics.columnToIndex[columns[i]]\\n            ] += data[i];\\n        }\\n\\n        userActivityMatrix[addressToId[userAddress]][\\n            uint256(schemaAnalytics.schemaCategory)\\n        ] += 1;\\n\\n        consumerCredits[msg.sender] = consumerCredits[msg.sender] + 1;\\n\\n        emit NewAnalytics(\\n            userAddress,\\n            msg.sender,\\n            uint256(schemaAnalytics.schemaCategory)\\n        );\\n    }\\n\\n    function updateAnalytics(\\n        address userAddress,\\n        bytes32 schemaName,\\n        bytes32[] calldata columns,\\n        uint256[] calldata data\\n    ) public {\\n        if (addressToId[userAddress] == 0) {\\n            this.addUser(userAddress);\\n        }\\n\\n        Analytics storage schemaAnalytics = dappAnalytics[\\n            schemaIndex[schemaName]\\n        ];\\n\\n        if (schemaAnalytics.addressToId[userAddress] == 0) {\\n            schemaAnalytics.data.push();\\n            for (uint256 i = 0; i < schemaAnalytics.columns.length; i++) {\\n                schemaAnalytics.data[schemaAnalytics.data.length - 1].push(0);\\n            }\\n\\n            schemaAnalytics.addressToId[userAddress] =\\n                schemaAnalytics.data.length - 1;\\n            schemaAnalytics.idToAddress[\\n                schemaAnalytics.data.length - 1\\n            ] = userAddress;\\n        }\\n\\n        for (uint256 i = 0; i < columns.length; i++) {\\n            schemaAnalytics.data[schemaAnalytics.addressToId[userAddress]][\\n                schemaAnalytics.columnToIndex[columns[i]]\\n            ] = data[i];\\n        }\\n\\n        userActivityMatrix[addressToId[userAddress]][\\n            uint256(schemaAnalytics.schemaCategory)\\n        ] += 1;\\n\\n        consumerCredits[msg.sender] = consumerCredits[msg.sender] + 1;\\n\\n        emit NewAnalytics(\\n            userAddress,\\n            msg.sender,\\n            uint256(schemaAnalytics.schemaCategory)\\n        );\\n    }\\n\\n    function getUserActivityMatrix()\\n        external\\n        view\\n        returns (uint256[][] memory)\\n    {\\n        return userActivityMatrix;\\n    }\\n\\n    function getAllSchemas() external view returns (SchemaDetails[] memory) {\\n        SchemaDetails[] memory schemaDetails = new SchemaDetails[](dappAnalytics.length - 1);\\n        for (uint256 i = 1; i < dappAnalytics.length; i++) {\\n            SchemaDetails memory schemaDetail;\\n            schemaDetail.schemaName = dappAnalytics[i].schemaName;\\n            schemaDetail.columns = dappAnalytics[i].columns;\\n            schemaDetail.schemaCategory = dappAnalytics[i].schemaCategory;\\n            schemaDetail.totalRecords = dappAnalytics[i].data.length;\\n            schemaDetails[i - 1] = schemaDetail;\\n        }\\n\\n        return schemaDetails;\\n    }\\n\\n    function getAnalyticsDataBySchemaName(\\n        bytes32 schemaName\\n    ) external view returns (uint256[][] memory) {\\n        return dappAnalytics[schemaIndex[schemaName]].data;\\n    }\\n\\n    function getColumnsOfSchema(\\n        bytes32 schemaName\\n    ) external view returns (bytes32[] memory) {\\n        return dappAnalytics[schemaIndex[schemaName]].columns;\\n    }\\n\\n    function getSchemaAddressToId(\\n        bytes32 schemaName,\\n        address userAddress\\n    ) external view returns (uint256) {\\n        return dappAnalytics[schemaIndex[schemaName]].addressToId[userAddress];\\n    }\\n\\n    function getSchemaIdToAddress(\\n        bytes32 schemaName,\\n        uint256 userId\\n    ) external view returns (address) {\\n        return dappAnalytics[schemaIndex[schemaName]].idToAddress[userId];\\n    }\\n\\n}\\n\",\"keccak256\":\"0xb94c178feba2a453e61548dc7b2969c05b1d1595b53d13cd3f65c9718241104d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60808060405234620001965760008054336001600160a01b0319821681178355906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a3600180549068010000000000000000918281101562000182578181018083558110156200016e5781845260208085206060519201906001600160401b0383116200015a578483116200015a57815483835580841062000130575b5060809186528086209084875b8581106200011d575050505050508260065560078055600854918210156200010957810190816008551015620000f5576008905261170690816200019c8239f35b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b83526041600452602483fd5b82855195019481850155018590620000b4565b828752848483892092830192015b8281106200014e575050620000a7565b8881550185906200013e565b634e487b7160e01b86526041600452602486fd5b634e487b7160e01b84526032600452602484fd5b634e487b7160e01b84526041600452602484fd5b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816302fa955d146110aa5750806306be2b4114610fe0578063165a055c14610f1757806326fdc0f614610e8e5780632a2d0c4714610e5c5780632a45e1ed14610def57806334aa962314610a2c57806339275b0a14610a0d578063421b2d8b14610871578063578f2aa014610852578063715018a6146107f557806380a13096146107af57806380eb65ae146107885780638343d5e6146104f85780638b12ed54146104b05780638da5cb5b146104885780639fba53bf1461029f578063a9d2e2d71461026a578063cb0e0d7d1461022e578063f2fde38b146101625763fa2e47cc1461010a57600080fd5b3461015e578160031936011261015e576024356001600160a01b03811690819003610159576101458360209584358152600587522054611402565b509060005201825280600020549051908152f35b600080fd5b8280fd5b503461015e57602036600319011261015e5761017c6112c6565b906101856114f9565b6001600160a01b039182169283156101dc575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b5050346102665760203660031901126102665760209181906001600160a01b036102566112c6565b1681526002845220549051908152f35b5080fd5b503461015e57602036600319011261015e5760209282916001600160a01b036102916112c6565b168252845220549051908152f35b50829034610266578160031936011261026657600854916000199182840193808511610475576102d18594969561161d565b936102de865195866115de565b8085526102ed601f199161161d565b01835b818110610456575050600195865b82811061039957505050508251938493602080860191818752855180935280870182828560051b8a0101970195915b84831061033a5788880389f35b9193959750919384808298603f198c82030186528a51908151815261036b83830151608080868501528301906114c5565b9161037c8782015188840190611453565b60608091015191015299019301930190928897969492959361032d565b6103a597959697611635565b6103ae82611402565b505481526103c6876103bf84611402565b500161166b565b602082015260ff60026103d884611402565b500154166007811015610443578982015260036103f483611402565b50015460608201528282019082821161043057816104219161041a61042795948c6116bc565b52896116bc565b50611551565b969594966102fe565b634e487b7160e01b875260118652602487fd5b634e487b7160e01b875260218652602487fd5b60209061046598969798611635565b82828a01015201969594966102f0565b634e487b7160e01b835260118252602483fd5b505034610266578160031936011261026657905490516001600160a01b039091168152602090f35b503461015e578160031936011261015e57916020923581526005835260056104da83832054611402565b5060243583520183528190205490516001600160a01b039091168152f35b50903461015e57606036600319011261015e5767ffffffffffffffff8235602480358381116107845761052e90369087016112dc565b90936044359160078310156107805784895260209560058752878a20546107495760085493600160401b908186101561073757610572600196878101600855611402565b5090888255600282019060ff8019835416911617905560038101948554838110156107105780886105a692018855876114ad565b61072457606051918211610710578382116107105780548282558083106106e6575b506080979697906000528a60002060005b8381106106d557505050508b9460068183019201955b85811061062d57505050505050505060085494600019860195861161061c57505084526005905282205580f35b634e487b7160e01b87526011905285fd5b8754156106c157876000526106448b600020611576565b61064f8187876115ba565b358354858110156106ad57918f8e908a8f8495610690610677898b6106a89b018d558c6114ad565b819391549060031b600019811b9283911b169119161790565b905561069d858d8d6115ba565b358352522055611551565b6105ef565b5050634e487b7160e01b8e5260418d52888efd5b8860328e634e487b7160e01b600052526000fd5b825182820155918c019188016105d9565b8160005288838d60002092830192015b8281106107045750506105c8565b600081550189906106f6565b8860418e634e487b7160e01b600052526000fd5b8860008e634e487b7160e01b8252526000fd5b634e487b7160e01b8c5260418b52868cfd5b875162461bcd60e51b8152808a0188905260128187015271534348454d41204e414d452045584953545360701b6044820152606490fd5b8880fd5b8680fd5b503461015e57602036600319011261015e5760209282913581526005845220549051908152f35b503461015e57602036600319011261015e5760016103bf836107f1956107de9435815260056020522054611402565b90519182916020835260208301906114c5565b0390f35b833461084f578060031936011261084f5761080e6114f9565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346102665781600319360112610266576020906006549051908152f35b50903461015e57602080600319360112610a095761088d6112c6565b926006908154906001918281018091116109f6578355815490600160401b91828110156109cd5780846108c292018555611476565b9190916109e2576060519267ffffffffffffffff84116109cd5783116109b85750805482825580831061098e575b50608090600052846000208360005b84811061097c57509250505086905b61094b575b5050546001600160a01b039093168085526002825282852084905592845260039052822080546001600160a01b031916909117905580f35b600754811015610977576109719061096c6109668554611476565b50611576565b611551565b8161090e565b610913565b878451940193818401550184906108ff565b8160005283838760002092830192015b8281106109ac5750506108f0565b6000815501849061099e565b604190634e487b7160e01b6000525260246000fd5b604182634e487b7160e01b6000525260246000fd5b600090634e487b7160e01b82525260246000fd5b634e487b7160e01b885260118252602488fd5b8380fd5b5050346102665781600319360112610266576020906007549051908152f35b5091903461026657610a3d3661130d565b848895929552602093600585528789205415610db7576001600160a01b038716808a5260028652888a205490939015610d5e575b895260058552610a83888a2054611402565b50958a87019484600052858752896000205415610c86575b878b968b9395888860039a8c60068d88019701985b888510610be65750509850505050505050505052600282526002610ad686882054611476565b5093019260ff845416906007821015610bd35790610af3916114ad565b81928192549283911b1c9160018301809311610bc05790610b2492919060031b600019811b9283911b169119161790565b9055338552858152838520549060018201809211610bad57338652869052838520555460ff16916007831015610b9a57516001600160a01b0391909116815233602082015260408101919091527f3a5918ca939d93e6bd42ac6f2f818c05e35a0fec0af9c4e1fd1f2b32db4e2f0d90606090a180f35b634e487b7160e01b845260218552602484fd5b634e487b7160e01b865260118752602486fd5b634e487b7160e01b895260118a52602489fd5b634e487b7160e01b885260218952602488fd5b610c2a928a8c93610c1e8f8d610c178e8e610c058f8f969087916115ba565b359c60005286528860002054906114ad565b50976115ba565b358352522054906114ad565b808d839493549182911b1c928301809311610c6c57610c6294939260001960039390931b92831b8019909216921b16175b9055611551565b888f8f8d90610ab0565b505050505060118f634e487b7160e01b6000525260246000fd5b60038801610c9381611600565b50600190508981018d825b610d16575b50508154600019929150828101908111610d015787600052888a528c6000205554908101908111610cee578b52600588018752898b2080546001600160a01b03191686179055610a9b565b634e487b7160e01b8c5260118d5260248cfd5b5050634e487b7160e01b8c5260118d5260248cfd5b8154811015610d595783546000198101908111610d44579061096c610966610d3e93876114ad565b82610c9e565b508f8f6011602492634e487b7160e01b835252fd5b610ca3565b303b15610da957885163421b2d8b60e01b81528b81018590528a8160248183305af18015610dad57908b91610d95575b5050610a71565b610d9e906115ca565b610da9578938610d8e565b8980fd5b8a513d8d823e3d90fd5b875162461bcd60e51b8152808b01869052601260248201527114d0d2115350481393d50814149154d1539560721b6044820152606490fd5b503461015e578160031936011261015e573591602435926001548110156102665760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190815484101561084f5750602092610e4e916114ad565b91905490519160031b1c8152f35b503461015e57602036600319011261015e5735825260036020908152918190205490516001600160a01b039091168152f35b5082903461026657602036600319011261026657359060085482101561084f5750600790600860005202610f1560ff7ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee5837ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301549301541683519283526020830190611453565bf35b50823461084f57602091826003193601126102665783600392610f4292358152600585522054611402565b5001908154610f508161161d565b92610f5d855194856115de565b8184526000908152828120928085015b838310610f81578651806107f18882611370565b81908751808388549182815201908860005284600020906000905b808210610fc6575050509181610fb860019593869503826115de565b815201950192019193610f6d565b825484528796909301926001928301929190910190610f9c565b82843461084f578060031936011261084f575060018054906110018261161d565b9161100e845193846115de565b808352600082815260207fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68186015b848410611051578751806107f18982611370565b8583895192838286549586815201948660005283600020906000905b8082106110925750505061108481859603826115de565b81520192019301929061103d565b8254885296909401958b95899592810192019061106d565b848484923461015e576110bc3661130d565b91949593929060018060a01b03871693848a5260209560028752898b205415611284575b508952600585526110f3888a2054611402565b50958a870193856000528487528960002054156111e9575b91936006880192600389019190888d898e825b8884106111a4579a50505050505050505050505260028152600261114485872054611476565b5092019160ff8354169060078210156111915790611161916114ad565b815490818160031b1c9160018301809311610bc05790610b2492919060031b600019811b9283911b169119161790565b634e487b7160e01b875260218852602487fd5b8a610c5b92610677928c8f98610c1e898f8f8f908f916111de9f85610c17946111cc926115ba565b359d60005286528860002054906114ad565b8990898f8f9061111e565b600388016111f681611600565b50600190508981018d825b611251575b50508154600019929150828101908111610d015788600052878a528c6000205554908101908111610cee578b52600588018752898b2080546001600160a01b0319168717905561110b565b815481101561127f5783546000198101908111610d44579061096c61096661127993876114ad565b82611201565b611206565b303b156112c25763421b2d8b60e01b81528b81018690528a8160248183305af18015610dad57156110e0576112bb909a919a6115ca565b988b6110e0565b8a80fd5b600435906001600160a01b038216820361015957565b9181601f840112156101595782359167ffffffffffffffff8311610159576020808501948460051b01011161015957565b6080600319820112610159576004356001600160a01b038116810361015957916024359167ffffffffffffffff916044358381116101595782611352916004016112dc565b939093926064359182116101595761136c916004016112dc565b9091565b602080820190808352835180925260408301928160408460051b830101950193600080925b8584106113a6575050505050505090565b9091929380959697603f1983820301855288519082808351928381520192019085905b8082106113e9575050509080600192990194019401929594939190611395565b91938060019294865181520194019201889392916113c9565b60085481101561143d576007906008600052027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30190600090565b634e487b7160e01b600052603260045260246000fd5b9060078210156114605752565b634e487b7160e01b600052602160045260246000fd5b60015481101561143d5760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b805482101561143d5760005260206000200190600090565b90815180825260208080930193019160005b8281106114e5575050505090565b8351855293810193928101926001016114d7565b6000546001600160a01b0316330361150d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60001981146115605760010190565b634e487b7160e01b600052601160045260246000fd5b8054600160401b8110156115a457611593916001820181556114ad565b8154906000199060031b1b19169055565b634e487b7160e01b600052604160045260246000fd5b919081101561143d5760051b0190565b67ffffffffffffffff81116115a457604052565b90601f8019910116810190811067ffffffffffffffff8211176115a457604052565b8054600160401b8110156115a45761136c916001820181556114ad565b67ffffffffffffffff81116115a45760051b60200190565b604051906080820182811067ffffffffffffffff8211176115a45760405260006060838281528160208201528260408201520152565b9060405191828154918282526020928383019160005283600020936000905b8282106116a2575050506116a0925003836115de565b565b85548452600195860195889550938101939091019061168a565b805182101561143d5760209160051b01019056fea264697066735822122053e5a95ef4d3254a41b4ef66ddd647d04eac71f67ce27e53b9255530260721ec64736f6c63430008110033",
  "deployedBytecode": "0x6080604081815260048036101561001557600080fd5b600092833560e01c90816302fa955d146110aa5750806306be2b4114610fe0578063165a055c14610f1757806326fdc0f614610e8e5780632a2d0c4714610e5c5780632a45e1ed14610def57806334aa962314610a2c57806339275b0a14610a0d578063421b2d8b14610871578063578f2aa014610852578063715018a6146107f557806380a13096146107af57806380eb65ae146107885780638343d5e6146104f85780638b12ed54146104b05780638da5cb5b146104885780639fba53bf1461029f578063a9d2e2d71461026a578063cb0e0d7d1461022e578063f2fde38b146101625763fa2e47cc1461010a57600080fd5b3461015e578160031936011261015e576024356001600160a01b03811690819003610159576101458360209584358152600587522054611402565b509060005201825280600020549051908152f35b600080fd5b8280fd5b503461015e57602036600319011261015e5761017c6112c6565b906101856114f9565b6001600160a01b039182169283156101dc575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b5050346102665760203660031901126102665760209181906001600160a01b036102566112c6565b1681526002845220549051908152f35b5080fd5b503461015e57602036600319011261015e5760209282916001600160a01b036102916112c6565b168252845220549051908152f35b50829034610266578160031936011261026657600854916000199182840193808511610475576102d18594969561161d565b936102de865195866115de565b8085526102ed601f199161161d565b01835b818110610456575050600195865b82811061039957505050508251938493602080860191818752855180935280870182828560051b8a0101970195915b84831061033a5788880389f35b9193959750919384808298603f198c82030186528a51908151815261036b83830151608080868501528301906114c5565b9161037c8782015188840190611453565b60608091015191015299019301930190928897969492959361032d565b6103a597959697611635565b6103ae82611402565b505481526103c6876103bf84611402565b500161166b565b602082015260ff60026103d884611402565b500154166007811015610443578982015260036103f483611402565b50015460608201528282019082821161043057816104219161041a61042795948c6116bc565b52896116bc565b50611551565b969594966102fe565b634e487b7160e01b875260118652602487fd5b634e487b7160e01b875260218652602487fd5b60209061046598969798611635565b82828a01015201969594966102f0565b634e487b7160e01b835260118252602483fd5b505034610266578160031936011261026657905490516001600160a01b039091168152602090f35b503461015e578160031936011261015e57916020923581526005835260056104da83832054611402565b5060243583520183528190205490516001600160a01b039091168152f35b50903461015e57606036600319011261015e5767ffffffffffffffff8235602480358381116107845761052e90369087016112dc565b90936044359160078310156107805784895260209560058752878a20546107495760085493600160401b908186101561073757610572600196878101600855611402565b5090888255600282019060ff8019835416911617905560038101948554838110156107105780886105a692018855876114ad565b61072457606051918211610710578382116107105780548282558083106106e6575b506080979697906000528a60002060005b8381106106d557505050508b9460068183019201955b85811061062d57505050505050505060085494600019860195861161061c57505084526005905282205580f35b634e487b7160e01b87526011905285fd5b8754156106c157876000526106448b600020611576565b61064f8187876115ba565b358354858110156106ad57918f8e908a8f8495610690610677898b6106a89b018d558c6114ad565b819391549060031b600019811b9283911b169119161790565b905561069d858d8d6115ba565b358352522055611551565b6105ef565b5050634e487b7160e01b8e5260418d52888efd5b8860328e634e487b7160e01b600052526000fd5b825182820155918c019188016105d9565b8160005288838d60002092830192015b8281106107045750506105c8565b600081550189906106f6565b8860418e634e487b7160e01b600052526000fd5b8860008e634e487b7160e01b8252526000fd5b634e487b7160e01b8c5260418b52868cfd5b875162461bcd60e51b8152808a0188905260128187015271534348454d41204e414d452045584953545360701b6044820152606490fd5b8880fd5b8680fd5b503461015e57602036600319011261015e5760209282913581526005845220549051908152f35b503461015e57602036600319011261015e5760016103bf836107f1956107de9435815260056020522054611402565b90519182916020835260208301906114c5565b0390f35b833461084f578060031936011261084f5761080e6114f9565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346102665781600319360112610266576020906006549051908152f35b50903461015e57602080600319360112610a095761088d6112c6565b926006908154906001918281018091116109f6578355815490600160401b91828110156109cd5780846108c292018555611476565b9190916109e2576060519267ffffffffffffffff84116109cd5783116109b85750805482825580831061098e575b50608090600052846000208360005b84811061097c57509250505086905b61094b575b5050546001600160a01b039093168085526002825282852084905592845260039052822080546001600160a01b031916909117905580f35b600754811015610977576109719061096c6109668554611476565b50611576565b611551565b8161090e565b610913565b878451940193818401550184906108ff565b8160005283838760002092830192015b8281106109ac5750506108f0565b6000815501849061099e565b604190634e487b7160e01b6000525260246000fd5b604182634e487b7160e01b6000525260246000fd5b600090634e487b7160e01b82525260246000fd5b634e487b7160e01b885260118252602488fd5b8380fd5b5050346102665781600319360112610266576020906007549051908152f35b5091903461026657610a3d3661130d565b848895929552602093600585528789205415610db7576001600160a01b038716808a5260028652888a205490939015610d5e575b895260058552610a83888a2054611402565b50958a87019484600052858752896000205415610c86575b878b968b9395888860039a8c60068d88019701985b888510610be65750509850505050505050505052600282526002610ad686882054611476565b5093019260ff845416906007821015610bd35790610af3916114ad565b81928192549283911b1c9160018301809311610bc05790610b2492919060031b600019811b9283911b169119161790565b9055338552858152838520549060018201809211610bad57338652869052838520555460ff16916007831015610b9a57516001600160a01b0391909116815233602082015260408101919091527f3a5918ca939d93e6bd42ac6f2f818c05e35a0fec0af9c4e1fd1f2b32db4e2f0d90606090a180f35b634e487b7160e01b845260218552602484fd5b634e487b7160e01b865260118752602486fd5b634e487b7160e01b895260118a52602489fd5b634e487b7160e01b885260218952602488fd5b610c2a928a8c93610c1e8f8d610c178e8e610c058f8f969087916115ba565b359c60005286528860002054906114ad565b50976115ba565b358352522054906114ad565b808d839493549182911b1c928301809311610c6c57610c6294939260001960039390931b92831b8019909216921b16175b9055611551565b888f8f8d90610ab0565b505050505060118f634e487b7160e01b6000525260246000fd5b60038801610c9381611600565b50600190508981018d825b610d16575b50508154600019929150828101908111610d015787600052888a528c6000205554908101908111610cee578b52600588018752898b2080546001600160a01b03191686179055610a9b565b634e487b7160e01b8c5260118d5260248cfd5b5050634e487b7160e01b8c5260118d5260248cfd5b8154811015610d595783546000198101908111610d44579061096c610966610d3e93876114ad565b82610c9e565b508f8f6011602492634e487b7160e01b835252fd5b610ca3565b303b15610da957885163421b2d8b60e01b81528b81018590528a8160248183305af18015610dad57908b91610d95575b5050610a71565b610d9e906115ca565b610da9578938610d8e565b8980fd5b8a513d8d823e3d90fd5b875162461bcd60e51b8152808b01869052601260248201527114d0d2115350481393d50814149154d1539560721b6044820152606490fd5b503461015e578160031936011261015e573591602435926001548110156102665760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190815484101561084f5750602092610e4e916114ad565b91905490519160031b1c8152f35b503461015e57602036600319011261015e5735825260036020908152918190205490516001600160a01b039091168152f35b5082903461026657602036600319011261026657359060085482101561084f5750600790600860005202610f1560ff7ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee5837ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301549301541683519283526020830190611453565bf35b50823461084f57602091826003193601126102665783600392610f4292358152600585522054611402565b5001908154610f508161161d565b92610f5d855194856115de565b8184526000908152828120928085015b838310610f81578651806107f18882611370565b81908751808388549182815201908860005284600020906000905b808210610fc6575050509181610fb860019593869503826115de565b815201950192019193610f6d565b825484528796909301926001928301929190910190610f9c565b82843461084f578060031936011261084f575060018054906110018261161d565b9161100e845193846115de565b808352600082815260207fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68186015b848410611051578751806107f18982611370565b8583895192838286549586815201948660005283600020906000905b8082106110925750505061108481859603826115de565b81520192019301929061103d565b8254885296909401958b95899592810192019061106d565b848484923461015e576110bc3661130d565b91949593929060018060a01b03871693848a5260209560028752898b205415611284575b508952600585526110f3888a2054611402565b50958a870193856000528487528960002054156111e9575b91936006880192600389019190888d898e825b8884106111a4579a50505050505050505050505260028152600261114485872054611476565b5092019160ff8354169060078210156111915790611161916114ad565b815490818160031b1c9160018301809311610bc05790610b2492919060031b600019811b9283911b169119161790565b634e487b7160e01b875260218852602487fd5b8a610c5b92610677928c8f98610c1e898f8f8f908f916111de9f85610c17946111cc926115ba565b359d60005286528860002054906114ad565b8990898f8f9061111e565b600388016111f681611600565b50600190508981018d825b611251575b50508154600019929150828101908111610d015788600052878a528c6000205554908101908111610cee578b52600588018752898b2080546001600160a01b0319168717905561110b565b815481101561127f5783546000198101908111610d44579061096c61096661127993876114ad565b82611201565b611206565b303b156112c25763421b2d8b60e01b81528b81018690528a8160248183305af18015610dad57156110e0576112bb909a919a6115ca565b988b6110e0565b8a80fd5b600435906001600160a01b038216820361015957565b9181601f840112156101595782359167ffffffffffffffff8311610159576020808501948460051b01011161015957565b6080600319820112610159576004356001600160a01b038116810361015957916024359167ffffffffffffffff916044358381116101595782611352916004016112dc565b939093926064359182116101595761136c916004016112dc565b9091565b602080820190808352835180925260408301928160408460051b830101950193600080925b8584106113a6575050505050505090565b9091929380959697603f1983820301855288519082808351928381520192019085905b8082106113e9575050509080600192990194019401929594939190611395565b91938060019294865181520194019201889392916113c9565b60085481101561143d576007906008600052027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30190600090565b634e487b7160e01b600052603260045260246000fd5b9060078210156114605752565b634e487b7160e01b600052602160045260246000fd5b60015481101561143d5760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b805482101561143d5760005260206000200190600090565b90815180825260208080930193019160005b8281106114e5575050505090565b8351855293810193928101926001016114d7565b6000546001600160a01b0316330361150d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60001981146115605760010190565b634e487b7160e01b600052601160045260246000fd5b8054600160401b8110156115a457611593916001820181556114ad565b8154906000199060031b1b19169055565b634e487b7160e01b600052604160045260246000fd5b919081101561143d5760051b0190565b67ffffffffffffffff81116115a457604052565b90601f8019910116810190811067ffffffffffffffff8211176115a457604052565b8054600160401b8110156115a45761136c916001820181556114ad565b67ffffffffffffffff81116115a45760051b60200190565b604051906080820182811067ffffffffffffffff8211176115a45760405260006060838281528160208201528260408201520152565b9060405191828154918282526020928383019160005283600020936000905b8282106116a2575050506116a0925003836115de565b565b85548452600195860195889550938101939091019061168a565b805182101561143d5760209160051b01019056fea264697066735822122053e5a95ef4d3254a41b4ef66ddd647d04eac71f67ce27e53b9255530260721ec64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/DataLayer.sol:DataLayer",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 741,
        "contract": "contracts/DataLayer.sol:DataLayer",
        "label": "userActivityMatrix",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_array(t_uint256)dyn_storage)dyn_storage"
      },
      {
        "astId": 745,
        "contract": "contracts/DataLayer.sol:DataLayer",
        "label": "addressToId",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 749,
        "contract": "contracts/DataLayer.sol:DataLayer",
        "label": "idToAddress",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 753,
        "contract": "contracts/DataLayer.sol:DataLayer",
        "label": "consumerCredits",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 757,
        "contract": "contracts/DataLayer.sol:DataLayer",
        "label": "schemaIndex",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 759,
        "contract": "contracts/DataLayer.sol:DataLayer",
        "label": "latestIndex",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 761,
        "contract": "contracts/DataLayer.sol:DataLayer",
        "label": "totalCategories",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 809,
        "contract": "contracts/DataLayer.sol:DataLayer",
        "label": "dappAnalytics",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_struct(Analytics)805_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_array(t_uint256)dyn_storage)dyn_storage": {
        "base": "t_array(t_uint256)dyn_storage",
        "encoding": "dynamic_array",
        "label": "uint256[][]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Analytics)805_storage)dyn_storage": {
        "base": "t_struct(Analytics)805_storage",
        "encoding": "dynamic_array",
        "label": "struct DataLayer.Analytics[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(Category)769": {
        "encoding": "inplace",
        "label": "enum DataLayer.Category",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_struct(Analytics)805_storage": {
        "encoding": "inplace",
        "label": "struct DataLayer.Analytics",
        "members": [
          {
            "astId": 782,
            "contract": "contracts/DataLayer.sol:DataLayer",
            "label": "schemaName",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 785,
            "contract": "contracts/DataLayer.sol:DataLayer",
            "label": "columns",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 788,
            "contract": "contracts/DataLayer.sol:DataLayer",
            "label": "schemaCategory",
            "offset": 0,
            "slot": "2",
            "type": "t_enum(Category)769"
          },
          {
            "astId": 792,
            "contract": "contracts/DataLayer.sol:DataLayer",
            "label": "data",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_array(t_uint256)dyn_storage)dyn_storage"
          },
          {
            "astId": 796,
            "contract": "contracts/DataLayer.sol:DataLayer",
            "label": "addressToId",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 800,
            "contract": "contracts/DataLayer.sol:DataLayer",
            "label": "idToAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_address)"
          },
          {
            "astId": 804,
            "contract": "contracts/DataLayer.sol:DataLayer",
            "label": "columnToIndex",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}